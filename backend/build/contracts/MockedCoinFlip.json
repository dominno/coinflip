{
  "contractName": "MockedCoinFlip",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor",
      "payable": true
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "DepositToContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "WithdrawFromContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "betLost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "betWin",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "side",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "bet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "depositToContract",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "fakeRandomValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFromContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRandom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "_mock_setfakeRandomValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"DepositToContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"WithdrawFromContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"betLost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"betWin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"_mock_setfakeRandomValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"side\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"bet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositToContract\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fakeRandomValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFromContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/dominik/blockchain/flip_coin/backend/contracts/mocks/MockedCoinFlip.sol\":\"MockedCoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dominik/blockchain/flip_coin/backend/contracts/CoinFlip.sol\":{\"keccak256\":\"0x463a16f60d9e55c434e2e04aa2dff0d24dd78b7160799c76bd17a6875c119ac7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e8168c30a75d2282c0d200192b87d63d5b65938c6a2149bcfb139f11597908e9\",\"dweb:/ipfs/Qmd3Z6MYMGgURnzgNQMsihURsimTdTxCs8XreaMx3186ss\"]},\"/Users/dominik/blockchain/flip_coin/backend/contracts/Ownable.sol\":{\"keccak256\":\"0x14ea9c833c829b6d5c7a0e29235d8fdf0b1f7288e9968c84c37ede1afc7a73fa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://42a2b6ff8d6300bd1725645878660e4f7d7897330bceab4c9b2299d3025e272e\",\"dweb:/ipfs/QmfNLih7qZqH9DvZbFdEFZN5rUZZ7nHsx6WMLcdgZnA2F5\"]},\"/Users/dominik/blockchain/flip_coin/backend/contracts/mocks/MockedCoinFlip.sol\":{\"keccak256\":\"0x89bc1ca548ea23b77e59f3959382b61f599980669a470aca23db509d44e41689\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0d8d10797832c397214468601524af95f5e2e8132c87089319fa5e4bca6b7a8a\",\"dweb:/ipfs/QmPoBQN85uSroiP42sC8W39EAMPJBk1CKx5YpgFN5bCEmV\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460018190555034600181905550610a61806100616000396000f3fe60806040526004361061009c5760003560e01c8063aacc5a1711610064578063aacc5a17146101de578063b69ef8a814610209578063bf0220b914610234578063c8f781c21461025f578063d0e30db014610269578063e0169352146102735761009c565b80632e1a7d4d146100a15780634e33f83b146100dc5780635f589e42146101415780636ffcc719146101585780638da5cb5b1461019d575b600080fd5b3480156100ad57600080fd5b506100da600480360360208110156100c457600080fd5b81019080803590602001909291905050506102ae565b005b3480156100e857600080fd5b5061012b600480360360208110156100ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061039e565b6040518082815260200191505060405180910390f35b34801561014d57600080fd5b506101566103b6565b005b34801561016457600080fd5b5061019b6004803603604081101561017b57600080fd5b8101908080359060200190929190803590602001909291905050506104ce565b005b3480156101a957600080fd5b506101b261067f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ea57600080fd5b506101f36106a3565b6040518082815260200191505060405180910390f35b34801561021557600080fd5b5061021e6106ad565b6040518082815260200191505060405180910390f35b34801561024057600080fd5b506102496106b3565b6040518082815260200191505060405180910390f35b6102676106b9565b005b6102716107fb565b005b34801561027f57600080fd5b506102ac6004803603602081101561029657600080fd5b810190808035906020019092919050505061095f565b005b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156102fa57600080fd5b6000811161030757600080fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561039a573d6000803e3d6000fd5b5050565b60026020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040e57600080fd5b60006001541161041d57600080fd5b6000600154905060006001819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610472573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f173ee011dfe568995c2e30a64b987d9f5291e3077938f0f4a6cd432f37d0e03082600154604051808381526020018281526020019250505060405180910390a250565b60008214806104dd5750600182145b61054f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f73696465206d7573742062652068656164283029206f72207461696c2831290081525060200191505060405180910390fd5b80600154101561055e57600080fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105aa57600080fd5b600033905060006105b96106a3565b905080841415610620576105cd8284610969565b8173ffffffffffffffffffffffffffffffffffffffff167f8a84560b1112b21625846ce57d8642ffa4931ceb9ab292922227dc20b69826c0846040518082815260200191505060405180910390a2610679565b61062a82846109ca565b8173ffffffffffffffffffffffffffffffffffffffff167fd2d083499c6d20d01232e9455ac75f862208737400192fe1cb804f65ffc750ce846040518082815260200191505060405180910390a25b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600354905090565b60015481565b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071157600080fd5b670de0b6b3a764000080341015610790576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6265742073686f756c64206d6f7265207468616e20310000000000000000000081525060200191505060405180910390fd5b346001600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f719a678c6170368d3e08a7171825b667d9f9b32520826d4fab3af939fef66e4234600154604051808381526020018281526020019250505060405180910390a250565b670de0b6b3a76400008034101561087a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6265742073686f756c64206d6f7265207468616e20310000000000000000000081525060200191505060405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1534600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808381526020018281526020019250505060405180910390a250565b8060038190555050565b8060016000828254039250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505050565b8060016000828254019250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550505056fea2646970667358221220c6f21955c53b88988dce1938c82e8b04d65d51c139c99a615abc52d591552d8064736f6c63430007040033",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c8063aacc5a1711610064578063aacc5a17146101de578063b69ef8a814610209578063bf0220b914610234578063c8f781c21461025f578063d0e30db014610269578063e0169352146102735761009c565b80632e1a7d4d146100a15780634e33f83b146100dc5780635f589e42146101415780636ffcc719146101585780638da5cb5b1461019d575b600080fd5b3480156100ad57600080fd5b506100da600480360360208110156100c457600080fd5b81019080803590602001909291905050506102ae565b005b3480156100e857600080fd5b5061012b600480360360208110156100ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061039e565b6040518082815260200191505060405180910390f35b34801561014d57600080fd5b506101566103b6565b005b34801561016457600080fd5b5061019b6004803603604081101561017b57600080fd5b8101908080359060200190929190803590602001909291905050506104ce565b005b3480156101a957600080fd5b506101b261067f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ea57600080fd5b506101f36106a3565b6040518082815260200191505060405180910390f35b34801561021557600080fd5b5061021e6106ad565b6040518082815260200191505060405180910390f35b34801561024057600080fd5b506102496106b3565b6040518082815260200191505060405180910390f35b6102676106b9565b005b6102716107fb565b005b34801561027f57600080fd5b506102ac6004803603602081101561029657600080fd5b810190808035906020019092919050505061095f565b005b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156102fa57600080fd5b6000811161030757600080fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561039a573d6000803e3d6000fd5b5050565b60026020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040e57600080fd5b60006001541161041d57600080fd5b6000600154905060006001819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610472573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f173ee011dfe568995c2e30a64b987d9f5291e3077938f0f4a6cd432f37d0e03082600154604051808381526020018281526020019250505060405180910390a250565b60008214806104dd5750600182145b61054f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f73696465206d7573742062652068656164283029206f72207461696c2831290081525060200191505060405180910390fd5b80600154101561055e57600080fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105aa57600080fd5b600033905060006105b96106a3565b905080841415610620576105cd8284610969565b8173ffffffffffffffffffffffffffffffffffffffff167f8a84560b1112b21625846ce57d8642ffa4931ceb9ab292922227dc20b69826c0846040518082815260200191505060405180910390a2610679565b61062a82846109ca565b8173ffffffffffffffffffffffffffffffffffffffff167fd2d083499c6d20d01232e9455ac75f862208737400192fe1cb804f65ffc750ce846040518082815260200191505060405180910390a25b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600354905090565b60015481565b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071157600080fd5b670de0b6b3a764000080341015610790576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6265742073686f756c64206d6f7265207468616e20310000000000000000000081525060200191505060405180910390fd5b346001600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f719a678c6170368d3e08a7171825b667d9f9b32520826d4fab3af939fef66e4234600154604051808381526020018281526020019250505060405180910390a250565b670de0b6b3a76400008034101561087a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6265742073686f756c64206d6f7265207468616e20310000000000000000000081525060200191505060405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1534600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808381526020018281526020019250505060405180910390a250565b8060038190555050565b8060016000828254039250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505050565b8060016000828254019250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550505056fea2646970667358221220c6f21955c53b88988dce1938c82e8b04d65d51c139c99a615abc52d591552d8064736f6c63430007040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "151:351:3:-:0;;;258:10:2;250:5;;:18;;;;;;;;;;;;;;;;;;693:9:0;683:7;:19;;;;270:9:3;260:7;:19;;;;151:351;;;;;;",
  "deployedSourceMap": "151:351:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2385:209:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;145:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1725:251;;;;;;;;;;;;;:::i;:::-;;832:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;82:20:2;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;295:102:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;120:19:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;194:27:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1549:170:0;;;:::i;:::-;;1367:176;;;:::i;:::-;;403:96:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2385:209:0;2470:6;2441:13;:25;2455:10;2441:25;;;;;;;;;;;;;;;;:35;;2433:44;;;;;;2504:1;2495:6;:10;2487:19;;;;;;2545:6;2516:13;:25;2530:10;2516:25;;;;;;;;;;;;;;;;:35;;;;;;;;;;;2561:10;:19;;:27;2581:6;2561:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2385:209;:::o;145:45::-;;;;;;;;;;;;;;;;;:::o;1725:251::-;165:5:2;;;;;;;;;;151:19;;:10;:19;;;143:28;;;;;;1802:1:0::1;1792:7;;:11;1784:20;;;::::0;::::1;;1814:15;1832:7;;1814:25;;1859:1;1849:7;:11;;;;1870:10;:19;;:31;1890:10;1870:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1937:10;1916:53;;;1949:10;1961:7;;1916:53;;;;;;;;;;;;;;;;;;;;;;;;181:1:2;1725:251:0:o:0;832:529::-;901:1;893:4;:9;:22;;;;914:1;906:4;:9;893:22;885:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;980:5;969:7;;:16;;961:25;;;;;;1033:5;1004:13;:25;1018:10;1004:25;;;;;;;;;;;;;;;;:34;;996:43;;;;;;1049:22;1074:10;1049:35;;1094:14;1111:11;:9;:11::i;:::-;1094:28;;1144:9;1136:4;:17;1132:223;;;1169:31;1186:6;1194:5;1169:16;:31::i;:::-;1226:6;1219:21;;;1234:5;1219:21;;;;;;;;;;;;;;;;;;1132:223;;;1271:32;1289:6;1297:5;1271:17;:32::i;:::-;1330:6;1322:22;;;1338:5;1322:22;;;;;;;;;;;;;;;;;;1132:223;832:529;;;;:::o;82:20:2:-;;;;;;;;;;;;:::o;295:102:3:-;353:4;375:15;;368:22;;295:102;:::o;120:19:0:-;;;;:::o;194:27:3:-;;;;:::o;1549:170:0:-;165:5:2;;;;;;;;;;151:19;;:10;:19;;;143:28;;;;;;1609:7:0::1;777:4;764:9;:17;;756:52;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1639:9:::2;1628:7;;:20;;;;;;;;;;;1681:10;1663:49;;;1693:9;1704:7;;1663:49;;;;;;;;;;;;;;;;;;;;;;;;181:1:2::1;1549:170:0:o:0;1367:176::-;1407:7;777:4;764:9;:17;;756:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:9:::1;1426:13;:25;1440:10;1426:25;;;;;;;;;;;;;;;;:38;;;;;;;;;;;1487:10;1479:57;;;1499:9;1510:13;:25;1524:10;1510:25;;;;;;;;;;;;;;;;1479:57;;;;;;;;;;;;;;;;;;;;;;;;1367:176:::0;:::o;403:96:3:-;487:5;469:15;:23;;;;403:96;:::o;2085:144:0:-;2176:5;2165:7;;:16;;;;;;;;;;;2216:5;2191:13;:21;2205:6;2191:21;;;;;;;;;;;;;;;;:30;;;;;;;;;;;2085:144;;:::o;2235:::-;2327:5;2316:7;;:16;;;;;;;;;;;2367:5;2342:13;:21;2356:6;2342:21;;;;;;;;;;;;;;;;:30;;;;;;;;;;;2235:144;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.7.4;\n\n// mocked version of CoinFlip contract - *only* used in tests\n\nimport \"../CoinFlip.sol\";\n\n\ncontract MockedCoinFlip is CoinFlip {\n\n    uint public fakeRandomValue;\n\n    constructor() payable {\n        balance = msg.value;   \n    }\n\n    function getRandom() virtual public view override returns(uint){\n        return fakeRandomValue;\n    }\n\n    function _mock_setfakeRandomValue(uint256 value) public {\n        fakeRandomValue = value;\n    }\n\n}\n",
  "sourcePath": "/Users/dominik/blockchain/flip_coin/backend/contracts/mocks/MockedCoinFlip.sol",
  "ast": {
    "absolutePath": "/Users/dominik/blockchain/flip_coin/backend/contracts/mocks/MockedCoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [
        314
      ],
      "MockedCoinFlip": [
        408
      ],
      "Ownable": [
        372
      ]
    },
    "id": 409,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 374,
        "literals": [
          "solidity",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:22:3"
      },
      {
        "absolutePath": "/Users/dominik/blockchain/flip_coin/backend/contracts/CoinFlip.sol",
        "file": "../CoinFlip.sol",
        "id": 375,
        "nodeType": "ImportDirective",
        "scope": 409,
        "sourceUnit": 315,
        "src": "123:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 376,
              "name": "CoinFlip",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 314,
              "src": "178:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CoinFlip_$314",
                "typeString": "contract CoinFlip"
              }
            },
            "id": 377,
            "nodeType": "InheritanceSpecifier",
            "src": "178:8:3"
          }
        ],
        "contractDependencies": [
          314,
          372
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 408,
        "linearizedBaseContracts": [
          408,
          314,
          372
        ],
        "name": "MockedCoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "bf0220b9",
            "id": 379,
            "mutability": "mutable",
            "name": "fakeRandomValue",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "194:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 378,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "194:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 387,
              "nodeType": "Block",
              "src": "250:39:3",
              "statements": [
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 382,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "260:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 383,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "270:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "270:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "260:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "260:19:3"
                }
              ]
            },
            "id": 388,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:2:3"
            },
            "returnParameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "250:0:3"
            },
            "scope": 408,
            "src": "228:61:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              241
            ],
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "358:39:3",
              "statements": [
                {
                  "expression": {
                    "id": 394,
                    "name": "fakeRandomValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 379,
                    "src": "375:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 393,
                  "id": 395,
                  "nodeType": "Return",
                  "src": "368:22:3"
                }
              ]
            },
            "functionSelector": "aacc5a17",
            "id": 397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 390,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "336:8:3"
            },
            "parameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:2:3"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "353:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "352:6:3"
            },
            "scope": 408,
            "src": "295:102:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "459:40:3",
              "statements": [
                {
                  "expression": {
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 402,
                      "name": "fakeRandomValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "469:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 403,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "487:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "469:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "469:23:3"
                }
              ]
            },
            "functionSelector": "e0169352",
            "id": 407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mock_setfakeRandomValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "437:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "436:15:3"
            },
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:3"
            },
            "scope": 408,
            "src": "403:96:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 409,
        "src": "151:351:3"
      }
    ],
    "src": "36:467:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/dominik/blockchain/flip_coin/backend/contracts/mocks/MockedCoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [
        314
      ],
      "MockedCoinFlip": [
        408
      ],
      "Ownable": [
        372
      ]
    },
    "id": 409,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 374,
        "literals": [
          "solidity",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:22:3"
      },
      {
        "absolutePath": "/Users/dominik/blockchain/flip_coin/backend/contracts/CoinFlip.sol",
        "file": "../CoinFlip.sol",
        "id": 375,
        "nodeType": "ImportDirective",
        "scope": 409,
        "sourceUnit": 315,
        "src": "123:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 376,
              "name": "CoinFlip",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 314,
              "src": "178:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CoinFlip_$314",
                "typeString": "contract CoinFlip"
              }
            },
            "id": 377,
            "nodeType": "InheritanceSpecifier",
            "src": "178:8:3"
          }
        ],
        "contractDependencies": [
          314,
          372
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 408,
        "linearizedBaseContracts": [
          408,
          314,
          372
        ],
        "name": "MockedCoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "bf0220b9",
            "id": 379,
            "mutability": "mutable",
            "name": "fakeRandomValue",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "194:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 378,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "194:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 387,
              "nodeType": "Block",
              "src": "250:39:3",
              "statements": [
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 382,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "260:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 383,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "270:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "270:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "260:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "260:19:3"
                }
              ]
            },
            "id": 388,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:2:3"
            },
            "returnParameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "250:0:3"
            },
            "scope": 408,
            "src": "228:61:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              241
            ],
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "358:39:3",
              "statements": [
                {
                  "expression": {
                    "id": 394,
                    "name": "fakeRandomValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 379,
                    "src": "375:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 393,
                  "id": 395,
                  "nodeType": "Return",
                  "src": "368:22:3"
                }
              ]
            },
            "functionSelector": "aacc5a17",
            "id": 397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 390,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "336:8:3"
            },
            "parameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:2:3"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "353:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "352:6:3"
            },
            "scope": 408,
            "src": "295:102:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "459:40:3",
              "statements": [
                {
                  "expression": {
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 402,
                      "name": "fakeRandomValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "469:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 403,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "487:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "469:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "469:23:3"
                }
              ]
            },
            "functionSelector": "e0169352",
            "id": 407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mock_setfakeRandomValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "437:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "436:15:3"
            },
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:3"
            },
            "scope": 408,
            "src": "403:96:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 409,
        "src": "151:351:3"
      }
    ],
    "src": "36:467:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x6e27035ae72989f90234f1e517a364366e6a29e90d55de67bf34b66339e07047": {
          "anonymous": false,
          "inputs": [],
          "name": "betLost",
          "type": "event"
        },
        "0x128e2e59a6cd95d8b9f0e9e419cdd2a51298d8cdc373567665bc54a554dfa400": {
          "anonymous": false,
          "inputs": [],
          "name": "betWin",
          "type": "event"
        },
        "0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "name": "Withdraw",
          "type": "event"
        },
        "0x719a678c6170368d3e08a7171825b667d9f9b32520826d4fab3af939fef66e42": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "name": "DepositToContract",
          "type": "event"
        },
        "0x173ee011dfe568995c2e30a64b987d9f5291e3077938f0f4a6cd432f37d0e030": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "name": "WithdrawFromContract",
          "type": "event"
        },
        "0xd2d083499c6d20d01232e9455ac75f862208737400192fe1cb804f65ffc750ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "betLost",
          "type": "event"
        },
        "0x8a84560b1112b21625846ce57d8642ffa4931ceb9ab292922227dc20b69826c0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "betWin",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9ae10d8142BB647ABaA6A638b17DFD44b28A3245",
      "transactionHash": "0x9899e79c26c116e8bc098d339b2617b69ce701933e93164923798bfcf3171954"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-11-11T21:10:19.178Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}