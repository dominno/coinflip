{
  "contractName": "MockedCoinFlip",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor",
      "payable": true
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "betLost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "betWin",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "side",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "bet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "fakeRandomValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRandom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "_mock_setfakeRandomValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"betLost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"betWin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"_mock_setfakeRandomValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"side\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"bet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fakeRandomValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/dominik/blockchain/flip_coin/backend/contracts/mocks/MockedCoinFlip.sol\":\"MockedCoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dominik/blockchain/flip_coin/backend/contracts/CoinFlip.sol\":{\"keccak256\":\"0x275c204c78350debd58ca0a5bd6b4f8086bb710193b0dc95e450299f5625f0e8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://957fabed9da552a53c9949950eaad88d523121a992e96dc2b13838989b0983b6\",\"dweb:/ipfs/QmYTGdrry32kpSw6QQpncGj2EQUGoT5FajMx38RC5j42LD\"]},\"/Users/dominik/blockchain/flip_coin/backend/contracts/mocks/MockedCoinFlip.sol\":{\"keccak256\":\"0x89bc1ca548ea23b77e59f3959382b61f599980669a470aca23db509d44e41689\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0d8d10797832c397214468601524af95f5e2e8132c87089319fa5e4bca6b7a8a\",\"dweb:/ipfs/QmPoBQN85uSroiP42sC8W39EAMPJBk1CKx5YpgFN5bCEmV\"]}},\"version\":1}",
  "bytecode": "0x6080604052346000819055503460008190555061072c806100216000396000f3fe60806040526004361061007b5760003560e01c8063b69ef8a81161004e578063b69ef8a81461016c578063bf0220b914610197578063d0e30db0146101c2578063e0169352146101cc5761007b565b80633ccfd60b146100805780634e33f83b146100975780636ffcc719146100fc578063aacc5a1714610141575b600080fd5b34801561008c57600080fd5b50610095610207565b005b3480156100a357600080fd5b506100e6600480360360208110156100ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610326565b6040518082815260200191505060405180910390f35b34801561010857600080fd5b5061013f6004803603604081101561011f57600080fd5b81019080803590602001909291908035906020019092919050505061033e565b005b34801561014d57600080fd5b506101566104ab565b6040518082815260200191505060405180910390f35b34801561017857600080fd5b506101816104b5565b6040518082815260200191505060405180910390f35b3480156101a357600080fd5b506101ac6104bb565b6040518082815260200191505060405180910390f35b6101ca6104c1565b005b3480156101d857600080fd5b50610205600480360360208110156101ef57600080fd5b810190808035906020019092919050505061062c565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161025357600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610322573d6000803e3d6000fd5b5050565b60016020528060005260406000206000915090505481565b600082148061034d5750600182145b6103bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f73696465206d7573742062652068656164283029206f72207461696c2831290081525060200191505060405180910390fd5b8060005410156103ce57600080fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561041a57600080fd5b600033905060006104296104ab565b90508084141561046e5761043d8284610636565b7f128e2e59a6cd95d8b9f0e9e419cdd2a51298d8cdc373567665bc54a554dfa40060405160405180910390a16104a5565b6104788284610696565b7f6e27035ae72989f90234f1e517a364366e6a29e90d55de67bf34b66339e0704760405160405180910390a15b50505050565b6000600254905090565b60005481565b60025481565b670de0b6b3a764000080341015610540576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6265742073686f756c64206d6f7265207468616e20310000000000000000000081525060200191505060405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a153334600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150565b8060028190555050565b80600080828254039250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505050565b80600080828254019250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550505056fea264697066735822122085fa6f5afd69ac791d4475369363ac335172dcccbaf1c13ae42d47fb5e83284764736f6c63430007040033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063b69ef8a81161004e578063b69ef8a81461016c578063bf0220b914610197578063d0e30db0146101c2578063e0169352146101cc5761007b565b80633ccfd60b146100805780634e33f83b146100975780636ffcc719146100fc578063aacc5a1714610141575b600080fd5b34801561008c57600080fd5b50610095610207565b005b3480156100a357600080fd5b506100e6600480360360208110156100ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610326565b6040518082815260200191505060405180910390f35b34801561010857600080fd5b5061013f6004803603604081101561011f57600080fd5b81019080803590602001909291908035906020019092919050505061033e565b005b34801561014d57600080fd5b506101566104ab565b6040518082815260200191505060405180910390f35b34801561017857600080fd5b506101816104b5565b6040518082815260200191505060405180910390f35b3480156101a357600080fd5b506101ac6104bb565b6040518082815260200191505060405180910390f35b6101ca6104c1565b005b3480156101d857600080fd5b50610205600480360360208110156101ef57600080fd5b810190808035906020019092919050505061062c565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161025357600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610322573d6000803e3d6000fd5b5050565b60016020528060005260406000206000915090505481565b600082148061034d5750600182145b6103bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f73696465206d7573742062652068656164283029206f72207461696c2831290081525060200191505060405180910390fd5b8060005410156103ce57600080fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561041a57600080fd5b600033905060006104296104ab565b90508084141561046e5761043d8284610636565b7f128e2e59a6cd95d8b9f0e9e419cdd2a51298d8cdc373567665bc54a554dfa40060405160405180910390a16104a5565b6104788284610696565b7f6e27035ae72989f90234f1e517a364366e6a29e90d55de67bf34b66339e0704760405160405180910390a15b50505050565b6000600254905090565b60005481565b60025481565b670de0b6b3a764000080341015610540576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6265742073686f756c64206d6f7265207468616e20310000000000000000000081525060200191505060405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a153334600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150565b8060028190555050565b80600080828254039250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505050565b80600080828254019250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550505056fea264697066735822122085fa6f5afd69ac791d4475369363ac335172dcccbaf1c13ae42d47fb5e83284764736f6c63430007040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "151:351:2:-:0;;;395:9:0;385:7;:19;;;;270:9:2;260:7;:19;;;;151:351;;;;;;",
  "deployedSourceMap": "151:351:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1628:206:0;;;;;;;;;;;;;:::i;:::-;;111:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;534:503;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;295:102:2;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;86:19:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;194:27:2;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1043:176:0;;;:::i;:::-;;403:96:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1628:206:0;1701:1;1673:13;:25;1687:10;1673:25;;;;;;;;;;;;;;;;:29;1665:38;;;;;;1713:11;1727:13;:25;1741:10;1727:25;;;;;;;;;;;;;;;;1713:39;;1790:1;1762:13;:25;1776:10;1762:25;;;;;;;;;;;;;;;:29;;;;1801:10;:19;;:27;1821:6;1801:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1628:206;:::o;111:45::-;;;;;;;;;;;;;;;;;:::o;534:503::-;603:1;595:4;:9;:22;;;;616:1;608:4;:9;595:22;587:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;682:5;671:7;;:16;;663:25;;;;;;735:5;706:13;:25;720:10;706:25;;;;;;;;;;;;;;;;:34;;698:43;;;;;;751:22;776:10;751:35;;796:14;813:11;:9;:11::i;:::-;796:28;;846:9;838:4;:17;834:197;;;871:31;888:6;896:5;871:16;:31::i;:::-;921:8;;;;;;;;;;834:197;;;960:32;978:6;986:5;960:17;:32::i;:::-;1011:9;;;;;;;;;;834:197;534:503;;;;:::o;295:102:2:-;353:4;375:15;;368:22;;295:102;:::o;86:19:0:-;;;;:::o;194:27:2:-;;;;:::o;1043:176:0:-;1083:7;479:4;466:9;:17;;458:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1131:9:::1;1102:13;:25;1116:10;1102:25;;;;;;;;;;;;;;;;:38;;;;;;;;;;;1155:57;1163:10;1175:9;1186:13;:25;1200:10;1186:25;;;;;;;;;;;;;;;;1155:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1043:176:::0;:::o;403:96:2:-;487:5;469:15;:23;;;;403:96;:::o;1328:144:0:-;1419:5;1408:7;;:16;;;;;;;;;;;1459:5;1434:13;:21;1448:6;1434:21;;;;;;;;;;;;;;;;:30;;;;;;;;;;;1328:144;;:::o;1478:::-;1570:5;1559:7;;:16;;;;;;;;;;;1610:5;1585:13;:21;1599:6;1585:21;;;;;;;;;;;;;;;;:30;;;;;;;;;;;1478:144;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.7.4;\n\n// mocked version of CoinFlip contract - *only* used in tests\n\nimport \"../CoinFlip.sol\";\n\n\ncontract MockedCoinFlip is CoinFlip {\n\n    uint public fakeRandomValue;\n\n    constructor() payable {\n        balance = msg.value;   \n    }\n\n    function getRandom() virtual public view override returns(uint){\n        return fakeRandomValue;\n    }\n\n    function _mock_setfakeRandomValue(uint256 value) public {\n        fakeRandomValue = value;\n    }\n\n}\n",
  "sourcePath": "/Users/dominik/blockchain/flip_coin/backend/contracts/mocks/MockedCoinFlip.sol",
  "ast": {
    "absolutePath": "/Users/dominik/blockchain/flip_coin/backend/contracts/mocks/MockedCoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [
        225
      ],
      "MockedCoinFlip": [
        294
      ]
    },
    "id": 295,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 260,
        "literals": [
          "solidity",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:22:2"
      },
      {
        "absolutePath": "/Users/dominik/blockchain/flip_coin/backend/contracts/CoinFlip.sol",
        "file": "../CoinFlip.sol",
        "id": 261,
        "nodeType": "ImportDirective",
        "scope": 295,
        "sourceUnit": 226,
        "src": "123:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 262,
              "name": "CoinFlip",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 225,
              "src": "178:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CoinFlip_$225",
                "typeString": "contract CoinFlip"
              }
            },
            "id": 263,
            "nodeType": "InheritanceSpecifier",
            "src": "178:8:2"
          }
        ],
        "contractDependencies": [
          225
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 294,
        "linearizedBaseContracts": [
          294,
          225
        ],
        "name": "MockedCoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "bf0220b9",
            "id": 265,
            "mutability": "mutable",
            "name": "fakeRandomValue",
            "nodeType": "VariableDeclaration",
            "scope": 294,
            "src": "194:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 264,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "194:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "250:39:2",
              "statements": [
                {
                  "expression": {
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 268,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "260:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 269,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "270:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "270:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "260:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "260:19:2"
                }
              ]
            },
            "id": 274,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:2:2"
            },
            "returnParameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "250:0:2"
            },
            "scope": 294,
            "src": "228:61:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              153
            ],
            "body": {
              "id": 282,
              "nodeType": "Block",
              "src": "358:39:2",
              "statements": [
                {
                  "expression": {
                    "id": 280,
                    "name": "fakeRandomValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 265,
                    "src": "375:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 279,
                  "id": 281,
                  "nodeType": "Return",
                  "src": "368:22:2"
                }
              ]
            },
            "functionSelector": "aacc5a17",
            "id": 283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 276,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "336:8:2"
            },
            "parameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:2:2"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "353:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "352:6:2"
            },
            "scope": 294,
            "src": "295:102:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 292,
              "nodeType": "Block",
              "src": "459:40:2",
              "statements": [
                {
                  "expression": {
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 288,
                      "name": "fakeRandomValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 265,
                      "src": "469:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 289,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 285,
                      "src": "487:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "469:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "469:23:2"
                }
              ]
            },
            "functionSelector": "e0169352",
            "id": 293,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mock_setfakeRandomValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "437:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "436:15:2"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:2"
            },
            "scope": 294,
            "src": "403:96:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 295,
        "src": "151:351:2"
      }
    ],
    "src": "36:467:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/dominik/blockchain/flip_coin/backend/contracts/mocks/MockedCoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [
        225
      ],
      "MockedCoinFlip": [
        294
      ]
    },
    "id": 295,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 260,
        "literals": [
          "solidity",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:22:2"
      },
      {
        "absolutePath": "/Users/dominik/blockchain/flip_coin/backend/contracts/CoinFlip.sol",
        "file": "../CoinFlip.sol",
        "id": 261,
        "nodeType": "ImportDirective",
        "scope": 295,
        "sourceUnit": 226,
        "src": "123:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 262,
              "name": "CoinFlip",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 225,
              "src": "178:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CoinFlip_$225",
                "typeString": "contract CoinFlip"
              }
            },
            "id": 263,
            "nodeType": "InheritanceSpecifier",
            "src": "178:8:2"
          }
        ],
        "contractDependencies": [
          225
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 294,
        "linearizedBaseContracts": [
          294,
          225
        ],
        "name": "MockedCoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "bf0220b9",
            "id": 265,
            "mutability": "mutable",
            "name": "fakeRandomValue",
            "nodeType": "VariableDeclaration",
            "scope": 294,
            "src": "194:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 264,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "194:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "250:39:2",
              "statements": [
                {
                  "expression": {
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 268,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "260:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 269,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "270:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "270:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "260:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "260:19:2"
                }
              ]
            },
            "id": 274,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:2:2"
            },
            "returnParameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "250:0:2"
            },
            "scope": 294,
            "src": "228:61:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              153
            ],
            "body": {
              "id": 282,
              "nodeType": "Block",
              "src": "358:39:2",
              "statements": [
                {
                  "expression": {
                    "id": 280,
                    "name": "fakeRandomValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 265,
                    "src": "375:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 279,
                  "id": 281,
                  "nodeType": "Return",
                  "src": "368:22:2"
                }
              ]
            },
            "functionSelector": "aacc5a17",
            "id": 283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 276,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "336:8:2"
            },
            "parameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:2:2"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "353:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "352:6:2"
            },
            "scope": 294,
            "src": "295:102:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 292,
              "nodeType": "Block",
              "src": "459:40:2",
              "statements": [
                {
                  "expression": {
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 288,
                      "name": "fakeRandomValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 265,
                      "src": "469:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 289,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 285,
                      "src": "487:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "469:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "469:23:2"
                }
              ]
            },
            "functionSelector": "e0169352",
            "id": 293,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mock_setfakeRandomValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "437:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "436:15:2"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:2"
            },
            "scope": 294,
            "src": "403:96:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 295,
        "src": "151:351:2"
      }
    ],
    "src": "36:467:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x6e27035ae72989f90234f1e517a364366e6a29e90d55de67bf34b66339e07047": {
          "anonymous": false,
          "inputs": [],
          "name": "betLost",
          "type": "event"
        },
        "0x128e2e59a6cd95d8b9f0e9e419cdd2a51298d8cdc373567665bc54a554dfa400": {
          "anonymous": false,
          "inputs": [],
          "name": "betWin",
          "type": "event"
        },
        "0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "name": "Withdraw",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9ae10d8142BB647ABaA6A638b17DFD44b28A3245",
      "transactionHash": "0x8e7bbf53e4e65b8d4ca4dbc889a1084d6167997d6381fcc7e451a4aba5ed14e9"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-11-09T16:03:28.063Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}