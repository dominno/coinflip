{
  "contractName": "MockedCoinFlip",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "DepositToContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "WithdrawFromContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "win",
          "type": "bool"
        }
      ],
      "name": "betFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        }
      ],
      "name": "betStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "newProvableQuery",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "side",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "bet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositToContract",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fakeRandomValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "procesingAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "procesingQueries",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "player",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "side",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "toggleProcesingAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFromContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "_mock_setfakeRandomValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isProvableAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"DepositToContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"WithdrawFromContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"win\",\"type\":\"bool\"}],\"name\":\"betFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"}],\"name\":\"betStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"newProvableQuery\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"_mock_setfakeRandomValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"side\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"bet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositToContract\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fakeRandomValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isProvableAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"procesingAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"procesingQueries\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"side\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"toggleProcesingAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFromContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/dominik/blockchain/flip_coin/backend/contracts/mocks/MockedCoinFlip.sol\":\"MockedCoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dominik/blockchain/flip_coin/backend/contracts/CoinFlip.sol\":{\"keccak256\":\"0xcf0f7a9a6354f30063a33f72663a87b4153c9110249f21a2dafe077f96093ec5\",\"urls\":[\"bzz-raw://097f784b4ed0ecaa3062e184acf8af9d7a080655b95393e65d0945b18cc00e89\",\"dweb:/ipfs/QmUhEJM5Xdy8vSHmBbJiRFHkodRDxN1zdzfzZpVYrM1x94\"]},\"/Users/dominik/blockchain/flip_coin/backend/contracts/Ownable.sol\":{\"keccak256\":\"0x8dc4d3bb1fea7b5de8f87dfebbcf96293d4efc5e088b443d95c9cc1890d6fe84\",\"urls\":[\"bzz-raw://2975c6044662126539300891babbff2816be1d3058fb17d909ee8248d9c0d651\",\"dweb:/ipfs/QmPpzJSSqCL6uyMHCu72XuicppXpFZMdMt9UNS2FKnJtkN\"]},\"/Users/dominik/blockchain/flip_coin/backend/contracts/mocks/MockedCoinFlip.sol\":{\"keccak256\":\"0x0b791036ac8b05927925a4aa00e248832536e8eb28087c2f05e98fb593bd1f62\",\"urls\":[\"bzz-raw://3c84c55ede22024b6c11b81f85bb97cb5d3bd4a7af70c16b876336b7a5beeae7\",\"dweb:/ipfs/QmRAuRsxpV6G1oH7RPzLmsAFG5uTWr99ZSBTXrp4tKAk4F\"]},\"/Users/dominik/blockchain/flip_coin/backend/contracts/provableAPI.sol\":{\"keccak256\":\"0x4d4705085b8a1ab415dd0d4b744f6ba5b43acc8c0ebf841290e4f9308cfeb795\",\"urls\":[\"bzz-raw://92ab2f99a6e85cafe056fc717d8608cd27d2e09027c088975fe7d9026516e898\",\"dweb:/ipfs/QmaNChQFyJU9vJJNyirtia1rrdU12S9wDjb71VrLFju6bt\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c80636ffcc7191161008a578063c5c833e211610059578063c5c833e2146105e3578063c8f781c21461064c578063d0e30db014610656578063e016935214610660576100f3565b80636ffcc719146104f15780638da5cb5b14610536578063b69ef8a81461058d578063bf0220b9146105b8576100f3565b80633b8d60d8116100c65780633b8d60d8146103bf5780634e33f83b1461045357806357a17cde146104b85780635f589e42146104da576100f3565b806327dc297e146100f85780632e1a7d4d146101ca5780633812c50c1461020557806338bbfa5014610256575b600080fd5b34801561010457600080fd5b506101c86004803603604081101561011b57600080fd5b81019080803590602001909291908035906020019064010000000081111561014257600080fd5b82018360208201111561015457600080fd5b8035906020019184600183028401116401000000008311171561017657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061069b565b005b3480156101d657600080fd5b50610203600480360360208110156101ed57600080fd5b81019080803590602001909291905050506106de565b005b34801561021157600080fd5b506102546004803603602081101561022857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107ce565b005b34801561026257600080fd5b506103bd6004803603606081101561027957600080fd5b8101908080359060200190929190803590602001906401000000008111156102a057600080fd5b8201836020820111156102b257600080fd5b803590602001918460018302840111640100000000831117156102d457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561033757600080fd5b82018360208201111561034957600080fd5b8035906020019184600183028401116401000000008311171561036b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610939565b005b3480156103cb57600080fd5b506103f8600480360360208110156103e257600080fd5b8101908080359060200190929190505050610b3e565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018215151515815260200194505050505060405180910390f35b34801561045f57600080fd5b506104a26004803603602081101561047657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b9b565b6040518082815260200191505060405180910390f35b6104c0610bb3565b604051808215151515815260200191505060405180910390f35b3480156104e657600080fd5b506104ef610bbc565b005b3480156104fd57600080fd5b506105346004803603604081101561051457600080fd5b810190808035906020019092919080359060200190929190505050610cd5565b005b34801561054257600080fd5b5061054b610f98565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561059957600080fd5b506105a2610fbd565b6040518082815260200191505060405180910390f35b3480156105c457600080fd5b506105cd610fc3565b6040518082815260200191505060405180910390f35b3480156105ef57600080fd5b506106326004803603602081101561060657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fc9565b604051808215151515815260200191505060405180910390f35b610654610fe9565b005b61065e61112c565b005b34801561066c57600080fd5b506106996004803603602081101561068357600080fd5b8101908080359060200190929190505050611290565b005b6106da828260006040519080825280601f01601f1916602001820160405280156106d45781602001600182028038833980820191505090505b50610939565b5050565b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561072a57600080fd5b6000811161073757600080fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156107ca573d6000803e3d6000fd5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461082757600080fd5b60011515600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514156108dd576000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610936565b6001600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b60011515610945610bb3565b15151461095157600080fd5b600061095e84848461129a565b60ff161461096b57610b39565b6000610976836113ca565b9050610980612339565b600860008681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16151515158152505090508181604001511415610a59576001816060019015159081151581525050610a54816000015182602001516113d6565b610a7d565b6000816060019015159081151581525050610a7c81600001518260200151611437565b5b600060096000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080606001511515816000015173ffffffffffffffffffffffffffffffffffffffff167f2d4761b9337e04823a97ece057fc5686ba4c7399ea39dabb5b920f02615087b183602001516040518082815260200191505060405180910390a350505b505050565b60086020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16905084565b60076020528060005260406000206000915090505481565b60006001905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c1557600080fd5b600060065411610c2457600080fd5b6000600654905060006006819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c79573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f173ee011dfe568995c2e30a64b987d9f5291e3077938f0f4a6cd432f37d0e03082600654604051808381526020018281526020019250505060405180910390a250565b6000821480610ce45750600182145b610d56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f73696465206d7573742062652068656164283029206f72207461696c2831290081525060200191505060405180910390fd5b806006541015610d6557600080fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610db157600080fd5b60001515600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610e0e57600080fd5b6000610e18611498565b90506001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001848152602001600015158152506008600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167f525acb9ae2faebcc472fd8857bdfc01d683f2de130e7952514a9c692606026d68383604051808381526020018281526020019250505060405180910390a2505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600a5481565b60096020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461104257600080fd5b670de0b6b3a7640000803410156110c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6265742073686f756c64206d6f7265207468616e20310000000000000000000081525060200191505060405180910390fd5b346006600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f719a678c6170368d3e08a7171825b667d9f9b32520826d4fab3af939fef66e4234600654604051808381526020018281526020019250505060405180910390a250565b670de0b6b3a7640000803410156111ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6265742073686f756c64206d6f7265207468616e20310000000000000000000081525060200191505060405180910390fd5b34600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1534600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808381526020018281526020019250505060405180910390a250565b80600a8190555050565b60007f4c00000000000000000000000000000000000000000000000000000000000000826000815181106112ca57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614158061135d57507f50000000000000000000000000000000000000000000000000000000000000008260018151811061132d57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b806113895750600160ff168260028151811061137557fe5b602001015160f81c60f81b60f81c60ff1614155b1561139757600190506113c3565b60006113ac8386866113a76114c3565b611565565b9050806113bd5760029150506113c3565b60009150505b9392505050565b6000600a549050919050565b8060066000828254039250508190555080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505050565b8060066000828254019250508190555080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505050565b60007f746573740000000000000000000000000000000000000000000000000000000060001b905090565b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561155b5780601f106115305761010080835404028352916020019161155b565b820191906000526020600020905b81548152906001019060200180831161153e57829003601f168201915b5050505050905090565b600080602060028760458151811061157957fe5b602001015160f81c60f81b60f81c60ff1601604401019050606060206040519080825280601f01601f1916602001820160405280156115c75781602001600182028038833980820191505090505b5090506115d987836020846000611c10565b50600284876040516020018083805190602001908083835b6020831061161457805182526020820191506020810190506020830392506115f1565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310611682578051825260208201915060208101905060208303925061165f565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156116c4573d6000803e3d6000fd5b5050506040513d60208110156116d957600080fd5b8101908080519060200190929190505050604051602001808281526020019150506040516020818303038152906040528051906020012081805190602001201461172857600092505050611c08565b6060600288600160498601018151811061173e57fe5b602001015160f81c60f81b60f81c60ff16016040519080825280601f01601f1916602001820160405280156117825781602001600182028038833980820191505090505b50905061179788604985018351846000611c10565b506118626002826040518082805190602001908083835b602083106117d157805182526020820191506020810190506020830392506117ae565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611813573d6000803e3d6000fd5b5050506040513d602081101561182857600080fd5b8101908080519060200190929190505050878a600860208801018151811061184c57fe5b602001015160f81c60f81b60f81c60ff16611c6f565b6118725760009350505050611c08565b606060296040519080825280601f01601f1916602001820160405280156118a85781602001600182028038833980820191505090505b5090506118bd89602086016029846000611c10565b506060604080519080825280601f01601f1916602001820160405280156118f35781602001600182028038833980820191505090505b50905060006041845160296020890101010190506119198b604083036040856000611c10565b5060006002836040518082805190602001908083835b60208310611952578051825260208201915060208101905060208303925061192f565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611994573d6000803e3d6000fd5b5050506040513d60208110156119a957600080fd5b8101908080519060200190929190505050905083816040516020018083805190602001908083835b602083106119f457805182526020820191506020810190506020830392506119d1565b6001836020036101000a0380198251168184511680821785525050505050509050018281526020019250505060405160208183030381529060405280519060200120600460008d8152602001908152602001600020541415611a6c57600460008c815260200190815260200160002060009055611a7c565b6000975050505050505050611c08565b606060496040519080825280601f01601f191660200182016040528015611ab25781602001600182028038833980820191505090505b509050611ac48d896049846000611c10565b50611b6d6002826040518082805190602001908083835b60208310611afe5780518252602082019150602081019050602083039250611adb565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611b40573d6000803e3d6000fd5b5050506040513d6020811015611b5557600080fd5b81019080805190602001909291905050508786611d1f565b611b8257600098505050505050505050611c08565b6005600083815260200190815260200160002060009054906101000a900460ff16611bdc57611bb18d84611edd565b6005600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6005600083815260200190815260200160002060009054906101000a900460ff16985050505050505050505b949350505050565b6060600082850190508084511015611c2757600080fd5b600086602001905060008460200190505b868860200101821015611c605781890151808288015250602082019150602081019050611c38565b85935050505095945050505050565b6000806001905082845114611c8357600080fd5b60008090505b83811015611d1357848181518110611c9d57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916868260208110611cd657fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611d0657600091505b8080600101915050611c89565b50809150509392505050565b6000806000806000606060206040519080825280601f01601f191660200182016040528015611d5d5781602001600182028038833980820191505090505b5090506000602089600381518110611d7157fe5b602001015160f81c60f81b60f81c60ff16036004019050611d9789826020856000611c10565b9150606060206040519080825280601f01601f191660200182016040528015611dcf5781602001600182028038833980820191505090505b509050602282019150611e0b8a60208c6001860381518110611ded57fe5b602001015160f81c60f81b60f81c60ff160384016020846000611c10565b90506020830151945060208101519350611e288b601b87876122f5565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff161415611e7e576001975050505050505050611ed6565b611e8b8b601c87876122f5565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff16149750505050505050505b9392505050565b60008060606002856001860181518110611ef357fe5b602001015160f81c60f81b60f81c60ff16016040519080825280601f01601f191660200182016040528015611f375781602001600182028038833980820191505090505b509050611f4985858351846000611c10565b506060604080519080825280601f01601f191660200182016040528015611f7f5781602001600182028038833980820191505090505b509050611f928660046040846000611c10565b50606060626040519080825280601f01601f191660200182016040528015611fc95781602001600182028038833980820191505090505b509050600160f81b81600081518110611fde57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061201f87604188036041846001611c10565b5060606040518060400160405280602081526020017ffd94fa71bc0ba10d39d464d0d8f465efeef0a2764e3887fcc9df41ded20f505c815250905061206a8160006020856042611c10565b506121136002836040518082805190602001908083835b602083106120a45780518252602082019150602081019050602083039250612081565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156120e6573d6000803e3d6000fd5b5050506040513d60208110156120fb57600080fd5b81019080805190602001909291905050508585611d1f565b945084612128576000955050505050506122ef565b606060405180606001604052806040815260200161237a604091399050606060426040519080825280601f01601f19166020018201604052801561217b5781602001600182028038833980820191505090505b50905060fe60f81b8160008151811061219057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506121cf8a60036041846001611c10565b50606060028b6045815181106121e157fe5b602001015160f81c60f81b60f81c60ff16016040519080825280601f01601f1916602001820160405280156122255781602001600182028038833980820191505090505b5090506122388b60448351846000611c10565b506122e16002836040518082805190602001908083835b60208310612272578051825260208201915060208101905060208303925061224f565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156122b4573d6000803e3d6000fd5b5050506040513d60208110156122c957600080fd5b81019080805190602001909291905050508285611d1f565b975087985050505050505050505b92915050565b60008060008060405188815287602082015286604082015285606082015260208160808360006001610bb8f192508051915050818193509350505094509492505050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600015158152509056fe7fb956469c5c9b89840d55b43537e66a98dd4811ea0a27224272c2e5622911e8537a2f8e86a46baec82864e98dd01e9ccc2f8bc5dfc9cbe5a91a290498dd96e4a26469706673582212203334a75444ff30454a5e69e99abbcbe62c3d436d10ef843862e32a855681a1e664736f6c63430006020033",
  "sourceMap": "161:666:3:-:0;;;268:10:2;260:5;;:18;;;;;;;;;;;;;;;;;;1256:35:0;11308:4:4;1274:16:0;;1256:17;;;:35;;:::i;:::-;287:9:3;277:7;:19;;;;161:666;;37155:116:4;11930:1;11906:26;;11914:3;;;;;;;;;;;11906:26;;;11905:64;;;;11967:1;11938:25;11958:3;;;;;;;;;;;11938:11;;;:25;;:::i;:::-;:30;11905:64;11901:130;;;11985:35;11562:1;11985:19;;;:35;;:::i;:::-;;11901:130;12065:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12065:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12065:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12065:16:4;;;;;;;;;;;;;;;;12044:37;;12052:8;;;;;;;;;;;12044:37;;;12040:106;;12118:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12118:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12118:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12118:16:4;;;;;;;;;;;;;;;;12097:8;;:38;;;;;;;;;;;;;;;;;;12040:106;37234:8:::1;;;;;;;;;;;:21;;;37256:7;37234:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;37234:30:4;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;37234:30:4;;;;37155:116:::0;:::o;37414:147::-;37473:10;37539:5;37527:18;37518:27;;37504:51;;;:::o;12638:205::-;12703:16;12815:21;:19;;;:21;;:::i;:::-;12808:28;;12638:205;;;:::o;13117:2031::-;13166:16;13256:1;13198:55;13210:42;13198:11;;;:55;;:::i;:::-;:59;13194:246;;;13309:42;13283:3;;:69;;;;;;;;;;;;;;;;;;13366:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;13425:4;13418:11;;;;13194:246;13511:1;13453:55;13465:42;13453:11;;;:55;;:::i;:::-;:59;13449:255;;;13572:42;13546:3;;:69;;;;;;;;;;;;;;;;;;13629:39;;;;;;;;;;;;;;;;;;:23;;;:39;;:::i;:::-;13689:4;13682:11;;;;13449:255;13775:1;13717:55;13729:42;13717:11;;;:55;;:::i;:::-;:59;13713:250;;;13834:42;13808:3;;:69;;;;;;;;;;;;;;;;;;13891:36;;;;;;;;;;;;;;;;;;:23;;;:36;;:::i;:::-;13948:4;13941:11;;;;13713:250;14034:1;13976:55;13988:42;13976:11;;;:55;;:::i;:::-;:59;13972:254;;;14095:42;14069:3;;:69;;;;;;;;;;;;;;;;;;14152:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;14211:4;14204:11;;;;13972:254;14297:1;14239:55;14251:42;14239:11;;;:55;;:::i;:::-;:59;14235:252;;;14357:42;14331:3;;:69;;;;;;;;;;;;;;;;;;14414:37;;;;;;;;;;;;;;;;;;:23;;;:37;;:::i;:::-;14472:4;14465:11;;;;14235:252;14558:1;14500:55;14512:42;14500:11;;;:55;;:::i;:::-;:59;14496:202;;;14619:42;14593:3;;:69;;;;;;;;;;;;;;;;;;14683:4;14676:11;;;;14496:202;14769:1;14711:55;14723:42;14711:11;;;:55;;:::i;:::-;:59;14707:201;;;14829:42;14803:3;;:69;;;;;;;;;;;;;;;;;;14893:4;14886:11;;;;14707:201;14979:1;14921:55;14933:42;14921:11;;;:55;;:::i;:::-;:59;14917:203;;;15041:42;15015:3;;:69;;;;;;;;;;;;;;;;;;15105:4;15098:11;;;;14917:203;15136:5;15129:12;;13117:2031;;:::o;12849:125::-;12954:13;12930:21;:37;;;;;;;;;;;;:::i;:::-;;12849:125;:::o;161:666:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "161:666:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15386:130:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15386:130:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15386:130:4;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15386:130:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15386:130:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15386:130:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15386:130:4;;;;;;;;;;;;;;;:::i;:::-;;5010:209:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5010:209:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5010:209:0;;;;;;;;;;;;;;;;;:::i;:::-;;3686:246;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3686:246:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3686:246:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1950:922;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1950:922:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1950:922:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1950:922:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1950:922:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1950:922:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1950:922:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1950:922:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1950:922:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1950:922:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1950:922:0;;;;;;;;;;;;;;;:::i;:::-;;303:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;303:47:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;303:47:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;252:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;252:45:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;252:45:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;716:102:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4114:251:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4114:251:0;;;:::i;:::-;;1418:526;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1418:526:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1418:526:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;92:20:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;92:20:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;226:19:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;226:19:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;204:27:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;204:27:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;356:50:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;356:50:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;356:50:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3938:170;;;:::i;:::-;;3504:176;;;:::i;:::-;;614:96:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;614:96:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;614:96:3;;;;;;;;;;;;;;;;;:::i;:::-;;15386:130:4;15469:40;15480:5;15487:7;15506:1;15496:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15496:12:4;;;;15469:10;:40::i;:::-;15386:130;;:::o;5010:209:0:-;5095:6;5066:13;:25;5080:10;5066:25;;;;;;;;;;;;;;;;:35;;5058:44;;;;;;5129:1;5120:6;:10;5112:19;;;;;;5170:6;5141:13;:25;5155:10;5141:25;;;;;;;;;;;;;;;;:35;;;;;;;;;;;5186:10;:19;;:27;5206:6;5186:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5186:27:0;5010:209;:::o;3686:246::-;175:5:2;;;;;;;;;;;161:19;;:10;:19;;;153:28;;;;;;3797:4:0::1;3767:34;;:18;:26;3786:6;3767:26;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;3763:163;;;3846:5;3817:18;:26;3836:6;3817:26;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;3763:163;;;3911:4;3882:18;:26;3901:6;3882:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;3763:163;3686:246:::0;:::o;1950:922::-;2089:4;2066:27;;:19;:17;:19::i;:::-;:27;;;2058:36;;;;;;2276:1;2126:146;2189:8;2219:7;2248:6;2126:41;:146::i;:::-;:151;;;2105:761;;;;;2319:14;2336:18;2346:7;2336:9;:18::i;:::-;2319:35;;2368:18;;:::i;:::-;2390:16;:26;2407:8;2390:26;;;;;;;;;;;2368:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2450:9;2434:7;:12;;;:25;2430:293;;;2496:4;2479:7;:14;;:21;;;;;;;;;;;2518:47;2535:7;:14;;;2551:7;:13;;;2518:16;:47::i;:::-;2430:293;;;2621:5;2604:7;:14;;:22;;;;;;;;;;;2644:48;2662:7;:14;;;2678:7;:13;;;2644:17;:48::i;:::-;2430:293;2773:5;2736:18;:34;2755:7;:14;;;2736:34;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;2840:7;:14;;;2797:58;;2809:7;:14;;;2797:58;;;2825:7;:13;;;2797:58;;;;;;;;;;;;;;;;;;2105:761;;;1950:922;;;:::o;303:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;252:45::-;;;;;;;;;;;;;;;;;:::o;716:102:3:-;785:4;807;800:11;;716:102;:::o;4114:251:0:-;175:5:2;;;;;;;;;;;161:19;;:10;:19;;;153:28;;;;;;4191:1:0::1;4181:7;;:11;4173:20;;;::::0;::::1;;4203:15;4221:7;;4203:25;;4248:1;4238:7;:11;;;;4259:10;:19;;:31;4279:10;4259:31;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;4259:31:0;4326:10;4305:53;;;4338:10;4350:7;;4305:53;;;;;;;;;;;;;;;;;;;;;;;;191:1:2;4114:251:0:o:0;1418:526::-;1490:1;1482:4;:9;:22;;;;1503:1;1495:4;:9;1482:22;1474:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1569:5;1558:7;;:16;;1550:25;;;;;;1622:5;1593:13;:25;1607:10;1593:25;;;;;;;;;;;;;;;;:34;;1585:43;;;;;;1680:5;1646:39;;:18;:30;1665:10;1646:30;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;1638:48;;;;;;1696:15;1714:19;:17;:19::i;:::-;1696:37;;1776:4;1743:18;:30;1762:10;1743:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;1818:66;;;;;;;;1831:10;1818:66;;;;;;1850:5;1818:66;;;;1863:4;1818:66;;;;1877:5;1818:66;;;;;1790:16;:25;1807:7;1790:25;;;;;;;;;;;:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:10;1899:38;;;1922:5;1929:7;1899:38;;;;;;;;;;;;;;;;;;;;;;;;1418:526;;;:::o;92:20:2:-;;;;;;;;;;;;;:::o;226:19:0:-;;;;:::o;204:27:3:-;;;;:::o;356:50:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;3938:170::-;175:5:2;;;;;;;;;;;161:19;;:10;:19;;;153:28;;;;;;3998:7:0::1;1363:4;1350:9;:17;;1342:52;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;4028:9:::2;4017:7;;:20;;;;;;;;;;;4070:10;4052:49;;;4082:9;4093:7;;4052:49;;;;;;;;;;;;;;;;;;;;;;;;191:1:2::1;3938:170:0:o:0;3504:176::-;3544:7;1363:4;1350:9;:17;;1342:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3592:9:::1;3563:13;:25;3577:10;3563:25;;;;;;;;;;;;;;;;:38;;;;;;;;;;;3624:10;3616:57;;;3636:9;3647:13;:25;3661:10;3647:25;;;;;;;;;;;;;;;;3616:57;;;;;;;;;;;;;;;;;;;;;;;;3504:176:::0;:::o;614:96:3:-;698:5;680:15;:23;;;;614:96;:::o;50541:579:4:-;50672:17;50799:16;:6;50806:1;50799:9;;;;;;;;;;;;;;;;:16;;;;;50798:40;;;;50821:16;:6;50828:1;50821:9;;;;;;;;;;;;;;;;:16;;;;;50798:40;:74;;;;50869:1;50843:28;;50849:6;50856:1;50849:9;;;;;;;;;;;;;;;;50843:16;;:28;;;;50798:74;50794:113;;;50895:1;50888:8;;;;50794:113;50916:18;50937:96;50973:6;50981:8;50997:7;51007:25;:23;:25::i;:::-;50937:35;:96::i;:::-;50916:117;;51048:13;51043:53;;51084:1;51077:8;;;;;51043:53;51112:1;51105:8;;;50541:579;;;;;;:::o;312:125:3:-;393:4;415:15;;408:22;;312:125;;;:::o;4710:144:0:-;4801:5;4790:7;;:16;;;;;;;;;;;4841:5;4816:13;:21;4830:6;4816:21;;;;;;;;;;;;;;;;:30;;;;;;;;;;;4710:144;;:::o;4860:::-;4952:5;4941:7;;:16;;;;;;;;;;;4992:5;4967:13;:21;4981:6;4967:21;;;;;;;;;;;;;;;;:30;;;;;;;;;;;4860:144;;:::o;443:161:3:-;506:7;531:66;524:73;;;;443:161;:::o;12980:131:4:-;13038:26;13083:21;13076:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12980:131;:::o;51526:2755::-;51678:19;51821:22;51895:2;51890:1;51867:6;51874:10;51867:18;;;;;;;;;;;;;;;;51861:25;;51856:31;;:35;51846:6;:46;:51;51821:76;;51907:20;51940:2;51930:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;51930:13:4;;;;51907:36;;51953:52;51963:6;51971:17;51990:2;51994:7;52003:1;51953:9;:52::i;:::-;;52070:48;52094:12;52108:8;52077:40;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;52077:40:4;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;52077:40:4;;;52070:48;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;52070:48:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;52070:48:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;52070:48:4;;;;;;;;;;;;;;;;52053:66;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;52053:66:4;;;52043:77;;;;;;52031:7;52021:18;;;;;;:99;52015:145;;52144:5;52137:12;;;;;;52015:145;52169:17;52264:1;52210:6;52257:1;52238:15;52217:17;:37;:41;52210:49;;;;;;;;;;;;;;;;52204:56;;52199:62;;:66;52189:77;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;52189:77:4;;;;52169:97;;52276:78;52286:6;52315:15;52294:17;:37;52333:4;:11;52346:4;52352:1;52276:9;:78::i;:::-;;52522:90;52541:12;52548:4;52541:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;52541:12:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;52541:12:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;52541:12:4;;;;;;;;;;;;;;;;52555:7;52575:6;52607:1;52602:2;52582:17;:22;:26;52575:34;;;;;;;;;;;;;;;;52569:41;;52564:47;;52522:18;:90::i;:::-;52517:134;;52635:5;52628:12;;;;;;;52517:134;52897:29;52939:10;52929:21;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;52929:21:4;;;;52897:53;;52960:74;52970:6;52998:2;52978:17;:22;53002:10;53014:16;53032:1;52960:9;:74::i;:::-;;53044:26;53083:2;53073:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;53073:13:4;;;;53044:42;;53096:15;53168:2;53154:4;:11;53140:10;53134:2;53114:17;:22;:37;:51;:56;53096:74;;53180:56;53190:6;53211:2;53198:10;:15;53215:2;53219:13;53234:1;53180:9;:56::i;:::-;;53246:25;53274:21;53281:13;53274:21;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;53274:21:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;53274:21:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53274:21:4;;;;;;;;;;;;;;;;53246:49;;53372:16;53390:17;53355:53;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;53355:53:4;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;53355:53:4;;;53345:64;;;;;;53309:22;:32;53332:8;53309:32;;;;;;;;;;;;:100;53305:230;;;53474:22;:32;53497:8;53474:32;;;;;;;;;;;53467:39;;;53305:230;;;53530:5;53523:12;;;;;;;;;;;53305:230;53657:20;53690:15;53680:26;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;53680:26:4;;;;53657:49;;53716:65;53726:6;53734:17;53753:15;53770:7;53779:1;53716:9;:65::i;:::-;;53796:47;53806:15;53813:7;53806:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;53806:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;53806:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53806:15:4;;;;;;;;;;;;;;;;53823:4;53829:13;53796:9;:47::i;:::-;53791:91;;53866:5;53859:12;;;;;;;;;;;;53791:91;53979:41;:60;54021:17;53979:60;;;;;;;;;;;;;;;;;;;;;53974:224;;54118:69;54168:6;54176:10;54118:49;:69::i;:::-;54055:41;:60;54097:17;54055:60;;;;;;;;;;;;:132;;;;;;;;;;;;;;;;;;53974:224;54214:41;:60;54256:17;54214:60;;;;;;;;;;;;;;;;;;;;;54207:67;;;;;;;;;;51526:2755;;;;;;;:::o;54416:693::-;54544:25;54581:14;54608:9;54598:7;:19;54581:36;;54649:9;54635:3;:10;:23;;54627:32;;;;;;54714:6;54728:11;54723:2;:16;54714:25;;54830:6;54844:9;54839:2;:14;54830:23;;54863:220;54894:7;54880:11;54875:2;:16;:26;54870:1;:32;54863:220;;;54973:1;54966:5;54962:13;54956:20;55013:3;55009:1;55004:3;55000:11;54993:24;54927:104;55049:2;55044:7;;;;55070:2;55065:7;;;;54863:220;;;55099:3;55092:10;;;;;54416:693;;;;;;;:::o;51126:394::-;51237:19;51268:11;51282:4;51268:18;;51322:13;51304:7;:14;:31;51296:40;;;;;;51351:9;51363:1;51351:13;;51346:145;51369:13;51366:1;:16;51346:145;;;51422:7;51430:1;51422:10;;;;;;;;;;;;;;;;51407:25;;;:8;51416:1;51407:11;;;;;;;;;;:25;;;;51403:78;;51461:5;51452:14;;51403:78;51384:3;;;;;;;51346:145;;;;51507:6;51500:13;;;51126:394;;;;;:::o;47929:1003::-;48028:17;48057:10;48077:14;48101:12;48123;48145:18;48176:2;48166:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;48166:13:4;;;;48145:34;;48189:11;48234:4;48219:7;48227:1;48219:10;;;;;;;;;;;;;;;;48213:17;;48208:23;;:30;48203:1;:36;48189:50;;48257:40;48267:7;48276:6;48284:2;48288:5;48295:1;48257:9;:40::i;:::-;48249:48;;48307:18;48338:2;48328:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;48328:13:4;;;;48307:34;;48361:6;48351:16;;;;48385:84;48395:7;48449:4;48425:7;48442:1;48433:6;:10;48425:19;;;;;;;;;;;;;;;;48419:26;;48414:32;;:39;48404:6;:50;48456:2;48460:5;48467:1;48385:9;:84::i;:::-;48377:92;;48527:2;48520:5;48516:14;48510:21;48502:29;;48569:2;48562:5;48558:14;48552:21;48544:29;;48610:41;48626:8;48636:2;48640:4;48646;48610:15;:41::i;:::-;48592:59;;;;;;;;48714:6;48665:55;;48699:7;48689:18;;;;;;48681:27;;48665:55;;;48661:265;;;48743:4;48736:11;;;;;;;;;;;48661:265;48796:41;48812:8;48822:2;48826:4;48832;48796:15;:41::i;:::-;48778:59;;;;;;;;48908:6;48859:55;;48893:7;48883:18;;;;;;48875:27;;48859:55;;;48851:64;;;;;;;;;47929:1003;;;;;;:::o;48938:1597::-;49054:19;49085:10;49246:17;49315:1;49287:6;49308:1;49294:11;:15;49287:23;;;;;;;;;;;;;;;;49281:30;;49276:36;;:40;49266:51;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;49266:51:4;;;;49246:71;;49327:52;49337:6;49345:11;49358:4;:11;49371:4;49377:1;49327:9;:52::i;:::-;;49389:27;49429:2;49419:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;49419:13:4;;;;49389:43;;49442:47;49452:6;49460:5;49467:2;49471:14;49487:1;49442:9;:47::i;:::-;;49499:20;49532:11;49522:22;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;49522:22:4;;;;49499:45;;49578:1;49567:14;;49554:7;49562:1;49554:10;;;;;;;;;;;:27;;;;;;;;;;;49598:51;49608:6;49630:2;49616:11;:16;49634:2;49638:7;49647:1;49598:9;:51::i;:::-;;49659:21;:93;;;;;;;;;;;;;;;;;;;49762:43;49772:8;49782:1;49785:2;49789:7;49798:6;49762:9;:43::i;:::-;;49823:48;49833:15;49840:7;49833:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;49833:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;49833:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;49833:15:4;;;;;;;;;;;;;;;;49850:4;49856:14;49823:9;:48::i;:::-;49815:56;;49886:5;49881:49;;49914:5;49907:12;;;;;;;;;49881:49;50031:22;:158;;;;;;;;;;;;;;;;;;;50199:20;50232:6;50222:17;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;50222:17:4;;;;50199:40;;50262:4;50249:17;;:7;50257:1;50249:10;;;;;;;;;;;:17;;;;;;;;;;;50276:36;50286:6;50294:1;50297:2;50301:7;50310:1;50276:9;:36::i;:::-;;50322:17;50386:1;50363:6;50370:10;50363:18;;;;;;;;;;;;;;;;50357:25;;50352:31;;:35;50342:46;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;50342:46:4;;;;50322:66;;50398:47;50408:6;50416;50424:4;:11;50437:4;50443:1;50398:9;:47::i;:::-;;50463:43;50473:15;50480:7;50473:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;50473:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;50473:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;50473:15:4;;;;;;;;;;;;;;;;50490:4;50496:9;50463;:43::i;:::-;50455:51;;50523:5;50516:12;;;;;;;;;;48938:1597;;;;;:::o;55316:982::-;55408:13;55423:25;55854:8;55872:12;55935:4;55929:11;55966:5;55960:4;55953:19;56007:2;56002;55996:4;55992:13;55985:25;56045:2;56040;56034:4;56030:13;56023:25;56083:2;56078;56072:4;56068:13;56061:25;56140:2;56134:4;56129:3;56123:4;56120:1;56117;56111:4;56106:37;56099:44;;56249:4;56243:11;56235:19;;55903:361;56281:3;56286:4;56273:18;;;;;;55316:982;;;;;;;:::o;161:666:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity > 0.6.1 < 0.7.0;\n\n// mocked version of CoinFlip contract - *only* used in tests\n\nimport \"../CoinFlip.sol\";\n\n\ncontract MockedCoinFlip is CoinFlip {\n\n    uint public fakeRandomValue;\n\n    constructor() payable public {\n        balance = msg.value;   \n    }\n\n    function getRandom(string memory _result) virtual internal view override returns(uint){\n        return fakeRandomValue;\n    }\n\n    function makeProvableQuery() virtual internal override returns(bytes32){\n        return 0x7465737400000000000000000000000000000000000000000000000000000000;\n    }    \n\n    function _mock_setfakeRandomValue(uint256 value) public {\n        fakeRandomValue = value;\n    }\n\n    function isProvableAddress() virtual public payable override returns(bool){\n        return true;\n    }\n\n    \n\n}\n",
  "sourcePath": "/Users/dominik/blockchain/flip_coin/backend/contracts/mocks/MockedCoinFlip.sol",
  "ast": {
    "absolutePath": "/Users/dominik/blockchain/flip_coin/backend/contracts/mocks/MockedCoinFlip.sol",
    "exportedSymbols": {
      "MockedCoinFlip": [
        648
      ]
    },
    "id": 649,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 594,
        "literals": [
          "solidity",
          ">",
          "0.6",
          ".1",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:32:3"
      },
      {
        "absolutePath": "/Users/dominik/blockchain/flip_coin/backend/contracts/CoinFlip.sol",
        "file": "../CoinFlip.sol",
        "id": 595,
        "nodeType": "ImportDirective",
        "scope": 649,
        "sourceUnit": 535,
        "src": "133:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 596,
              "name": "CoinFlip",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 534,
              "src": "188:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CoinFlip_$534",
                "typeString": "contract CoinFlip"
              }
            },
            "id": 597,
            "nodeType": "InheritanceSpecifier",
            "src": "188:8:3"
          }
        ],
        "contractDependencies": [
          534,
          592,
          7059
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 648,
        "linearizedBaseContracts": [
          648,
          534,
          7059,
          592
        ],
        "name": "MockedCoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "bf0220b9",
            "id": 599,
            "name": "fakeRandomValue",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 648,
            "src": "204:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 598,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "204:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 607,
              "nodeType": "Block",
              "src": "267:39:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 602,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "277:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 603,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "287:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "287:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "277:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "277:19:3"
                }
              ]
            },
            "documentation": null,
            "id": 608,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:2:3"
            },
            "returnParameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "267:0:3"
            },
            "scope": 648,
            "src": "238:68:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              444
            ],
            "body": {
              "id": 618,
              "nodeType": "Block",
              "src": "398:39:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 616,
                    "name": "fakeRandomValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 599,
                    "src": "415:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 615,
                  "id": 617,
                  "nodeType": "Return",
                  "src": "408:22:3"
                }
              ]
            },
            "documentation": null,
            "id": 619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 612,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "376:8:3"
            },
            "parameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 610,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 619,
                  "src": "331:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "330:23:3"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 614,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 619,
                  "src": "393:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:6:3"
            },
            "scope": 648,
            "src": "312:125:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              313
            ],
            "body": {
              "id": 627,
              "nodeType": "Block",
              "src": "514:90:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "307837343635373337343030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "531:66:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_52647538817385212172903286807934654968315727694643370704309751478220717293568_by_1",
                      "typeString": "int_const 5264...(69 digits omitted)...3568"
                    },
                    "value": "0x7465737400000000000000000000000000000000000000000000000000000000"
                  },
                  "functionReturnParameters": 624,
                  "id": 626,
                  "nodeType": "Return",
                  "src": "524:73:3"
                }
              ]
            },
            "documentation": null,
            "id": 628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makeProvableQuery",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 621,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "489:8:3"
            },
            "parameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "469:2:3"
            },
            "returnParameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 623,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 628,
                  "src": "506:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "505:9:3"
            },
            "scope": 648,
            "src": "443:161:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 637,
              "nodeType": "Block",
              "src": "670:40:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 633,
                      "name": "fakeRandomValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 599,
                      "src": "680:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 634,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 630,
                      "src": "698:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "680:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "680:23:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e0169352",
            "id": 638,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mock_setfakeRandomValue",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 630,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 638,
                  "src": "648:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "647:15:3"
            },
            "returnParameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "670:0:3"
            },
            "scope": 648,
            "src": "614:96:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              461
            ],
            "body": {
              "id": 646,
              "nodeType": "Block",
              "src": "790:28:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "807:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 643,
                  "id": 645,
                  "nodeType": "Return",
                  "src": "800:11:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "57a17cde",
            "id": 647,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isProvableAddress",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 640,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "768:8:3"
            },
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "742:2:3"
            },
            "returnParameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 647,
                  "src": "785:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "784:6:3"
            },
            "scope": 648,
            "src": "716:102:3",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 649,
        "src": "161:666:3"
      }
    ],
    "src": "36:792:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/dominik/blockchain/flip_coin/backend/contracts/mocks/MockedCoinFlip.sol",
    "exportedSymbols": {
      "MockedCoinFlip": [
        648
      ]
    },
    "id": 649,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 594,
        "literals": [
          "solidity",
          ">",
          "0.6",
          ".1",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:32:3"
      },
      {
        "absolutePath": "/Users/dominik/blockchain/flip_coin/backend/contracts/CoinFlip.sol",
        "file": "../CoinFlip.sol",
        "id": 595,
        "nodeType": "ImportDirective",
        "scope": 649,
        "sourceUnit": 535,
        "src": "133:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 596,
              "name": "CoinFlip",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 534,
              "src": "188:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CoinFlip_$534",
                "typeString": "contract CoinFlip"
              }
            },
            "id": 597,
            "nodeType": "InheritanceSpecifier",
            "src": "188:8:3"
          }
        ],
        "contractDependencies": [
          534,
          592,
          7059
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 648,
        "linearizedBaseContracts": [
          648,
          534,
          7059,
          592
        ],
        "name": "MockedCoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "bf0220b9",
            "id": 599,
            "name": "fakeRandomValue",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 648,
            "src": "204:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 598,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "204:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 607,
              "nodeType": "Block",
              "src": "267:39:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 602,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "277:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 603,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "287:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "287:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "277:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "277:19:3"
                }
              ]
            },
            "documentation": null,
            "id": 608,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:2:3"
            },
            "returnParameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "267:0:3"
            },
            "scope": 648,
            "src": "238:68:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              444
            ],
            "body": {
              "id": 618,
              "nodeType": "Block",
              "src": "398:39:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 616,
                    "name": "fakeRandomValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 599,
                    "src": "415:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 615,
                  "id": 617,
                  "nodeType": "Return",
                  "src": "408:22:3"
                }
              ]
            },
            "documentation": null,
            "id": 619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 612,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "376:8:3"
            },
            "parameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 610,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 619,
                  "src": "331:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "330:23:3"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 614,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 619,
                  "src": "393:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:6:3"
            },
            "scope": 648,
            "src": "312:125:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              313
            ],
            "body": {
              "id": 627,
              "nodeType": "Block",
              "src": "514:90:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "307837343635373337343030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "531:66:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_52647538817385212172903286807934654968315727694643370704309751478220717293568_by_1",
                      "typeString": "int_const 5264...(69 digits omitted)...3568"
                    },
                    "value": "0x7465737400000000000000000000000000000000000000000000000000000000"
                  },
                  "functionReturnParameters": 624,
                  "id": 626,
                  "nodeType": "Return",
                  "src": "524:73:3"
                }
              ]
            },
            "documentation": null,
            "id": 628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makeProvableQuery",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 621,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "489:8:3"
            },
            "parameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "469:2:3"
            },
            "returnParameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 623,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 628,
                  "src": "506:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "505:9:3"
            },
            "scope": 648,
            "src": "443:161:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 637,
              "nodeType": "Block",
              "src": "670:40:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 633,
                      "name": "fakeRandomValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 599,
                      "src": "680:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 634,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 630,
                      "src": "698:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "680:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "680:23:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e0169352",
            "id": 638,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mock_setfakeRandomValue",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 630,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 638,
                  "src": "648:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "647:15:3"
            },
            "returnParameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "670:0:3"
            },
            "scope": 648,
            "src": "614:96:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              461
            ],
            "body": {
              "id": 646,
              "nodeType": "Block",
              "src": "790:28:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "807:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 643,
                  "id": 645,
                  "nodeType": "Return",
                  "src": "800:11:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "57a17cde",
            "id": 647,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isProvableAddress",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 640,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "768:8:3"
            },
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "742:2:3"
            },
            "returnParameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 647,
                  "src": "785:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "784:6:3"
            },
            "scope": 648,
            "src": "716:102:3",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 649,
        "src": "161:666:3"
      }
    ],
    "src": "36:792:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x6e27035ae72989f90234f1e517a364366e6a29e90d55de67bf34b66339e07047": {
          "anonymous": false,
          "inputs": [],
          "name": "betLost",
          "type": "event"
        },
        "0x128e2e59a6cd95d8b9f0e9e419cdd2a51298d8cdc373567665bc54a554dfa400": {
          "anonymous": false,
          "inputs": [],
          "name": "betWin",
          "type": "event"
        },
        "0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "name": "Withdraw",
          "type": "event"
        },
        "0x719a678c6170368d3e08a7171825b667d9f9b32520826d4fab3af939fef66e42": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "name": "DepositToContract",
          "type": "event"
        },
        "0x173ee011dfe568995c2e30a64b987d9f5291e3077938f0f4a6cd432f37d0e030": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "name": "WithdrawFromContract",
          "type": "event"
        },
        "0xd2d083499c6d20d01232e9455ac75f862208737400192fe1cb804f65ffc750ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "betLost",
          "type": "event"
        },
        "0x8a84560b1112b21625846ce57d8642ffa4931ceb9ab292922227dc20b69826c0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "betWin",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9ae10d8142BB647ABaA6A638b17DFD44b28A3245",
      "transactionHash": "0x9899e79c26c116e8bc098d339b2617b69ce701933e93164923798bfcf3171954"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-11-27T22:11:27.340Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}